// TODO: 接入 rag和lang chain
// TODO: 接入db 存储上下文
// TODO: 使用ebiten制作桌面版
// TODO: 抽离代码分出server层和对外界面的v层

# 启动
在config.yaml中配置自己的数据库

qdrant:存储向量数据
docker pull qdrant/qdrant
docker run -itd --name qdrant -p 6333:6333 qdrant/qdrant
curl -X PUT http://localhost:6333/collections/ollama_rag \
-H 'Content-Type: application/json' \
--data-raw '{
    "vectors": {
        "size": 1024,
        "distance": "Dot"
    }
}'
管理qdrant向量数据库
http://localhost:6333/dashboard

LangChainGo: 引入库

使用 LangChainGo的样例
https://blog.csdn.net/DEVELOPERAA/article/details/144817765